name: Automatically Build image on tag ONLY
on:
    push:
        tags:
          - v[0-9]+.[0-9]+.[0-9]+
          - v[0-9]+.[0-9]+.[0-9]+-*

jobs:
    build:

        runs-on: ubuntu-20.04
        
        steps:

        - uses: actions/checkout@v2
          with:
            fetch-depth: 0

        - name: Dependencies
          run: |
              sudo sed -i 's/focal/hirsute/g' /etc/apt/sources.list
              sudo apt update
              sudo apt -y dist-upgrade
              sudo apt install binfmt-support qemu-user-static quilt debootstrap apt-cacher-ng libarchive-tools qemu-utils
              sudo sed 's/# PassThroughPattern:.*this would allow.*/PassThroughPattern: .* #/' -i /etc/apt-cacher-ng/acng.conf
              sudo chmod -R 0777 /var/cache/apt-cacher-ng
        - name: Cache apt packages
          uses: actions/cache@v2
          env:
            cache-name: apt-cacher-ng-cache
          with:
            path: /var/cache/apt-cacher-ng
            key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
            restore-keys: |
              ${{ runner.os }}-build-${{ env.cache-name }}-
              ${{ runner.os }}-build-
              ${{ runner.os }}-
        - name: Set image name
          run: |
                CITADEL_OS_VERSION="$(git describe --tags)"
                IMAGE_NAME="citadel-os-${CITADEL_OS_VERSION}"
                echo "CITADEL_OS_VERSION=$CITADEL_OS_VERSION"  >> $GITHUB_ENV
                echo "IMAGE_NAME=$IMAGE_NAME" >> $GITHUB_ENV
                echo "APT_PROXY=http://172.17.0.1:3142" >> $GITHUB_ENV
        - name: Run build script
          run: |
                echo "Building $IMAGE_NAME"
                sudo docker system prune --all --force
                sudo IMG_FILENAME=$IMAGE_NAME ZIP_FILENAME=$IMAGE_NAME CITADEL_OS_VERSION=$CITADEL_OS_VERSION ./build.sh
        - name: Copy ZIP to current working dir
          run: cp deploy/*.zip ./

        - name: Debug current working dir
          run: ls -la

        - name: Create release draft
          uses: softprops/action-gh-release@v1
          with:
            files: |
              ${{ env.IMAGE_NAME }}.zip
            name: ${{ github.ref }}
            draft: true
            body: "TODO: Release notes"
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
